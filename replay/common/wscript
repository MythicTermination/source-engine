#! /usr/bin/env python
# encoding: utf-8

from waflib import Utils
import os

top = '.'
PROJECT_NAME = 'replay_common'

def options(opt):
	# stub
	return

def configure(conf):
	return

def build(bld):
	source = [
		'replay.cpp',
		'replaylib.cpp',
		'basereplayserializeable.cpp',
		'performance.cpp',
		'replaytime.cpp',
		'replayutils.cpp',
		'screenshot.cpp',
	]

	includes = [
		'.',
		'../../public',
		'../../public/tier0',
		'../../public/tier1',
		'../../common'
	]

	defines = []

	libs = ['tier2','mathlib','bitmap']

	if bld.env.DEST_OS == 'win32':
		libs += ['USER32', 'IMM32', 'GDI32', 'SHELL32', 'OLE32', 'SHLWAPI', 'WINMM']
	elif bld.env.DEST_OS == 'darwin':
		libs += ['APPLICATIONSERVICES']
		
	install_path = bld.env.LIBDIR

	bld.stlib(
		source   = source,
		target   = PROJECT_NAME,
		name     = PROJECT_NAME,
		features = 'c cxx',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count()
	)

